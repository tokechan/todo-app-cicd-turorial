name: Todo App CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build Phase
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  test:
    name: Test Phase
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

  deploy:
    name: Deploy Phase
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Prepeare Google Application Credentials
        run: |
          printf '%s' "${{ secrets.FIREBASE_SERVICE_ACCOUNT_B64 }}" > "$RUNNER_TEMP/key.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/key.json" >> $GITHUB_ENV

      - name: Validate service account JSON & project
        run: |
          sudo apt-get update && sudo apt-get install -y jq >/dev/null
          echo "SA project_id: $(jq -r '.project_id' "$RUNNER_TEMP/key.json")"
          echo "SA type      : $(jq -r '.type' "$RUNNER_TEMP/key.json")"



      - name: Deploy Firebase
        run: |
          firebase deploy --only hosting --non-interactive

      - name: Remove private key 
        if: always()
        run: rm $RUNNER_TEMP/key.json
